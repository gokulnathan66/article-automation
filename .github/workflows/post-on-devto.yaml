name: Post on Dev.to

on:
  push:
    branches: [main]

jobs:
  post-on-devto:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Load repo variables into env at the start
      - name: Load saved post variables as env
        run: |
          echo "SAVED_POST_ID=${{ vars.SAVED_POST_ID }}" >> $GITHUB_ENV
          echo "SAVED_POST_TITLE=${{ vars.SAVED_POST_TITLE }}" >> $GITHUB_ENV
          echo "SAVED_POST_URL=${{ vars.SAVED_POST_URL }}" >> $GITHUB_ENV
          echo "SAVED_POST_PUBLISHED_AT=${{ vars.SAVED_POST_PUBLISHED_AT }}" >> $GITHUB_ENV
          echo "SAVED_POST_UPDATED_AT=${{ vars.SAVED_POST_UPDATED_AT }}" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24'

      - name: Install dependencies
        run: npm install

      - name: Debug repo files
        run: |
          pwd
          ls -la
          ls -la api/

      - name: Run post script and capture output
        id: run_post
        run: |
          node api/post.js > post_output.json

          echo "Script output:"
          cat post_output.json

          if jq empty post_output.json 2>/dev/null; then
            echo "JSON is valid, extracting fields..."
            echo "SAVED_POST_ID=$(jq -r '.id' post_output.json)" >> $GITHUB_ENV
            echo "SAVED_POST_TITLE=$(jq -r '.title' post_output.json)" >> $GITHUB_ENV
            echo "SAVED_POST_URL=$(jq -r '.url' post_output.json)" >> $GITHUB_ENV
            echo "SAVED_POST_PUBLISHED_AT=$(jq -r '.published_at' post_output.json)" >> $GITHUB_ENV
            echo "SAVED_POST_UPDATED_AT=$(jq -r '.updated_at' post_output.json)" >> $GITHUB_ENV
          else
            echo "Error: Output is not valid JSON"
            cat post_output.json
            exit 1
          fi
        env:
          DEV_TO_API_KEY: ${{ secrets.DEV_TO_API_KEY }}

      - name: Save post details to repo variables (requires PAT)
        run: |
          if jq -e 'has("error") | not' post_output.json; then
            echo "Updating GitHub repository variables..."

            # ID
            gh api --method PATCH /repos/${{ github.repository }}/actions/variables/SAVED_POST_ID \
              -f name="SAVED_POST_ID" \
              -f value="$(jq -r '.id' post_output.json)" || \
            gh api --method POST /repos/${{ github.repository }}/actions/variables \
              -f name="SAVED_POST_ID" \
              -f value="$(jq -r '.id' post_output.json)"

            # TITLE
            gh api --method PATCH /repos/${{ github.repository }}/actions/variables/SAVED_POST_TITLE \
              -f name="SAVED_POST_TITLE" \
              -f value="$(jq -r '.title' post_output.json)" || \
            gh api --method POST /repos/${{ github.repository }}/actions/variables \
              -f name="SAVED_POST_TITLE" \
              -f value="$(jq -r '.title' post_output.json)"

            # URL
            gh api --method PATCH /repos/${{ github.repository }}/actions/variables/SAVED_POST_URL \
              -f name="SAVED_POST_URL" \
              -f value="$(jq -r '.url' post_output.json)" || \
            gh api --method POST /repos/${{ github.repository }}/actions/variables \
              -f name="SAVED_POST_URL" \
              -f value="$(jq -r '.url' post_output.json)"

            # PUBLISHED_AT
            gh api --method PATCH /repos/${{ github.repository }}/actions/variables/SAVED_POST_PUBLISHED_AT \
              -f name="SAVED_POST_PUBLISHED_AT" \
              -f value="$(jq -r '.published_at' post_output.json)" || \
            gh api --method POST /repos/${{ github.repository }}/actions/variables \
              -f name="SAVED_POST_PUBLISHED_AT" \
              -f value="$(jq -r '.published_at' post_output.json)"

            # UPDATED_AT
            gh api --method PATCH /repos/${{ github.repository }}/actions/variables/SAVED_POST_UPDATED_AT \
              -f name="SAVED_POST_UPDATED_AT" \
              -f value="$(jq -r '.updated_at' post_output.json)" || \
            gh api --method POST /repos/${{ github.repository }}/actions/variables \
              -f name="SAVED_POST_UPDATED_AT" \
              -f value="$(jq -r '.updated_at' post_output.json)"
          else
            echo "Skipped saving repo variables due to errors."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.VAR_EDIT_TOKEN_GIT }}   # âœ… Use your PAT here

      - name: Show post info
        run: |
          echo "Article posted/updated."
          echo "ID: $SAVED_POST_ID"
          echo "Title: $SAVED_POST_TITLE"
          echo "URL: $SAVED_POST_URL"
          echo "Published At: $SAVED_POST_PUBLISHED_AT"
          echo "Updated At: $SAVED_POST_UPDATED_AT"
